---
import { getCollection } from "astro:content";

import BaseLayout from "@/layouts/BaseLayout.astro";
import type { CollectionEntry } from "astro:content";

const rawPosts = await getCollection("blogPosts");

// Group posts by year
const posts = rawPosts.reduce(
  (groups: { [key: string]: CollectionEntry<"blogPosts">[] }, post) => {
    const year = post.data.pubDate.getFullYear();
    if (!groups[year]) {
      groups[year] = [];
    }
    groups[year].push(post);
    return groups;
  },
  {},
);

// Convert to array of objs, sorting by date
const postsArray = Object.keys(posts)
  .map((year) => {
    return {
      year,
      posts: posts[year].sort(
        (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
      ),
    };
  })
  .sort((a, b) => parseInt(b.year) - parseInt(a.year));
---

<BaseLayout pageTitle="Blog | acbuie" bannerTitle="Musings">
  <ul>
    {
      postsArray.map((d) => (
        <>
          <h2 class="text-4xl py-5">{d.year}</h2>
          <ul class="text-xl">
            {d.posts.map((p) => (
              <li class="flex justify-between items-end">
                <span class="max-w-1/2 md:max-w-3/4">{p.data.title}</span>
                <span>
                  {p.data.pubDate.toLocaleDateString("default", {
                    month: "short",
                    day: "numeric",
                  })}
                </span>
              </li>
            ))}
          </ul>
        </>
      ))
    }
  </ul>
  <!-- {test} -->
</BaseLayout>
